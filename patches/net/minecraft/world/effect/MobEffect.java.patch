--- a/net/minecraft/world/effect/MobEffect.java
+++ b/net/minecraft/world/effect/MobEffect.java
@@ -35,7 +_,7 @@
 import net.minecraft.world.flag.FeatureFlagSet;
 import net.minecraft.world.flag.FeatureFlags;
 
-public class MobEffect implements FeatureElement {
+public class MobEffect implements FeatureElement, net.neoforged.neoforge.common.extensions.IMobEffectExtension {
     public static final Codec<Holder<MobEffect>> CODEC = BuiltInRegistries.MOB_EFFECT.holderByNameCodec();
     public static final StreamCodec<RegistryFriendlyByteBuf, Holder<MobEffect>> STREAM_CODEC = ByteBufCodecs.holderRegistry(Registries.MOB_EFFECT);
     private static final int AMBIENT_ALPHA = Mth.floor(38.25F);
@@ -130,6 +_,14 @@
         return this;
     }
 
+    /**
+     * Neo: attribute template with custom level curve
+     */
+    public MobEffect addAttributeModifier(Holder<Attribute> p_316656_, ResourceLocation p_350368_, it.unimi.dsi.fastutil.ints.Int2DoubleFunction p_19475_, AttributeModifier.Operation p_19476_) {
+        this.attributeModifiers.put(p_316656_, new MobEffect.AttributeTemplate(p_350368_, p_19475_.apply(0), p_19476_, p_19475_));
+        return this;
+    }
+
     public MobEffect setBlendDuration(int p_316265_) {
         this.blendDurationTicks = p_316265_;
         return this;
@@ -181,8 +_,24 @@
         return this.requiredFeatures;
     }
 
-    static record AttributeTemplate(ResourceLocation id, double amount, AttributeModifier.Operation operation) {
+    /**
+     * Neo: Allowing mods to define client behavior for their MobEffects
+     * @deprecated Use {@link net.neoforged.neoforge.client.extensions.common.RegisterClientExtensionsEvent} instead
+     */
+    @Deprecated(forRemoval = true, since = "1.21")
+    public void initializeClient(java.util.function.Consumer<net.neoforged.neoforge.client.extensions.common.IClientMobEffectExtensions> consumer) {
+    }
+
+    static record AttributeTemplate(ResourceLocation id, double amount, AttributeModifier.Operation operation, @Nullable it.unimi.dsi.fastutil.ints.Int2DoubleFunction curve) {
+
+        public AttributeTemplate(ResourceLocation id, double amount, AttributeModifier.Operation operation) {
+            this(id, amount, operation, null);
+        }
+
         public AttributeModifier create(int p_316614_) {
+            if (curve != null) {
+                return new AttributeModifier(this.id, this.curve.apply(p_316614_), this.operation);
+            }
             return new AttributeModifier(this.id, this.amount * (double)(p_316614_ + 1), this.operation);
         }
     }
