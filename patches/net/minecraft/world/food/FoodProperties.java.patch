--- a/net/minecraft/world/food/FoodProperties.java
+++ b/net/minecraft/world/food/FoodProperties.java
@@ -49,6 +_,25 @@
         return (int)(this.eatSeconds * 20.0F);
     }
 
+    public boolean equals(Object otherObject) {// Neo: Fix MC-272643
+        if(otherObject == this) return true;
+        if (!(otherObject instanceof FoodProperties other)) return false;
+        boolean ans = nutrition == other.nutrition &&
+                saturation == other.saturation &&
+                canAlwaysEat == other.canAlwaysEat &&
+                eatSeconds == other.eatSeconds;
+        if (!ans) return false;
+        if (!effects.equals(other.effects)) return false;
+        boolean selfEmpty = usingConvertsTo.isEmpty();
+        boolean otherEmpty = other.usingConvertsTo.isEmpty();
+        if (selfEmpty && otherEmpty) return true;
+        if (selfEmpty ^ otherEmpty) return false;
+        ItemStack selfContainer = usingConvertsTo.get();
+        ItemStack otherContainer = other.usingConvertsTo.get();
+        if (selfContainer == otherContainer) return true;
+        return selfContainer.getCount() == otherContainer.getCount() && ItemStack.isSameItemSameComponents(selfContainer, otherContainer);
+    }
+
     public static class Builder {
         private int nutrition;
         private float saturationModifier;
@@ -77,11 +_,18 @@
             return this;
         }
 
+        // Neo: Use supplier method instead
+        @Deprecated
         public FoodProperties.Builder effect(MobEffectInstance p_38763_, float p_38764_) {
             this.effects.add(new FoodProperties.PossibleEffect(p_38763_, p_38764_));
             return this;
         }
 
+        public FoodProperties.Builder effect(java.util.function.Supplier<MobEffectInstance> effectIn, float probability) {
+            this.effects.add(new FoodProperties.PossibleEffect(effectIn, probability));
+            return this;
+        }
+
         public FoodProperties.Builder usingConvertsTo(ItemLike p_347650_) {
             this.usingConvertsTo = Optional.of(new ItemStack(p_347650_));
             return this;
@@ -93,7 +_,7 @@
         }
     }
 
-    public static record PossibleEffect(MobEffectInstance effect, float probability) {
+    public static record PossibleEffect(java.util.function.Supplier<MobEffectInstance> effectSupplier, float probability) {
         public static final Codec<FoodProperties.PossibleEffect> CODEC = RecordCodecBuilder.create(
             p_337893_ -> p_337893_.group(
                         MobEffectInstance.CODEC.fieldOf("effect").forGetter(FoodProperties.PossibleEffect::effect),
@@ -109,8 +_,12 @@
             FoodProperties.PossibleEffect::new
         );
 
+        private PossibleEffect(MobEffectInstance effect, float probability) {
+            this(() -> effect, probability);
+        }
+
         public MobEffectInstance effect() {
-            return new MobEffectInstance(this.effect);
+            return new MobEffectInstance(this.effectSupplier.get());
         }
     }
 }
